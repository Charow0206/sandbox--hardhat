{
  "address": "0xB0028748894404a8fd6C30dee60B3b0Bf668566F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "getAmountFundedOfAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4a57cc51c93bfb43ec31c3f2432d8db25dafdb2c4176a49a407007f7044bbcd7",
  "receipt": {
    "to": null,
    "from": "0x7C011696470851A491b7FaD61f115efB60f731A5",
    "contractAddress": "0xB0028748894404a8fd6C30dee60B3b0Bf668566F",
    "transactionIndex": 17,
    "gasUsed": "1022680",
    "logsBloom": "0x
    "blockHash": "0xe8fb267ad2cc7a5345ac81de44607984789f3db797e6d218e0974c09a5eadcbd",
    "transactionHash": "0x4a57cc51c93bfb43ec31c3f2432d8db25dafdb2c4176a49a407007f7044bbcd7",
    "logs": [],
    "blockNumber": 7709730,
    "cumulativeGasUsed": "2709086",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 7,
  "solcInputHash": "5821acf479375fc5ef6a84995aa8ece4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getAmountFundedOfAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rowin van Amsterdam\",\"details\":\"This implements price feeds as our library.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowdfunding.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for demo purposes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowdfunding.\\n * @author Rowin van Amsterdam\\n * @notice This contract is for demo purposes.\\n * @dev This implements price feeds as our library.\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Value is not enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        /**\\n         * @notice Resets mapping.\\n         */\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        /**\\n         * @notice Resets array.\\n         */\\n        s_funders = new address[](0);\\n\\n        /**\\n         * @notice Withdraw funds to owner.\\n         */\\n        (bool callSucceeded, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucceeded, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 _index) public view returns (address) {\\n        return s_funders[_index];\\n    }\\n\\n    function getAmountFundedOfAddress(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[_funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x07437e291c31f498c637b9c69759e6990180ebbc16ec890536f9b69511d16970\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD (8 decimals, for example 1000.00000000 = $1)\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xc1d9112b0ce840dec5abca2715d81222171c73169caf0262e731de84c6409474\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012a4380380620012a483398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161112462000180600039600081816102db0152818161052a0152818161057a015261077001526111246000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610123578063be2693f01461012d578063d7b4750c14610137578063f97cea50146101745761008e565b80633ccfd60b146100985780636b69a592146100a2578063893d20e8146100cd5780639e87a5cd146100f85761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102d9565b005b3480156100ae57600080fd5b506100b7610519565b6040516100c49190610a68565b60405180910390f35b3480156100d957600080fd5b506100e2610526565b6040516100ef9190610ac4565b60405180910390f35b34801561010457600080fd5b5061010d61054e565b60405161011a9190610b3e565b60405180910390f35b61012b6101b1565b005b610135610578565b005b34801561014357600080fd5b5061015e60048036038101906101599190610b8a565b61083c565b60405161016b9190610ac4565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190610be3565b610884565b6040516101a89190610a68565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cc90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c6d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104095760006001828154811061038457610383610c8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610ceb565b915050610361565b50600067ffffffffffffffff81111561042557610424610d34565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b50600190805190602001906104699291906109a8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049090610d94565b60006040518083038185875af1925050503d80600081146104cd576040519150601f19603f3d011682016040523d82523d6000602084013e6104d2565b606091505b5050905080610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610df5565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561068157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610637575b5050505050905060005b815181101561070b5760008282815181106106a9576106a8610c8d565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070390610ceb565b91505061068b565b50600067ffffffffffffffff81111561072757610726610d34565b5b6040519080825280602002602001820160405280156107555781602001602082028036833780820191505090505b506001908051906020019061076b9291906109a8565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107b290610d94565b60006040518083038185875af1925050503d80600081146107ef576040519150601f19603f3d011682016040523d82523d6000602084013e6107f4565b606091505b5050905080610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90610df5565b60405180910390fd5b5050565b60006001828154811061085257610851610c8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806108d883610908565b90506000670de0b6b3a764000085836108f19190610e15565b6108fb9190610e9e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190610f5c565b5050509150506402540be400816109a09190610fd7565b915050919050565b828054828255906000526020600020908101928215610a21579160200282015b82811115610a205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c8565b5b509050610a2e9190610a32565b5090565b5b80821115610a4b576000816000905550600101610a33565b5090565b6000819050919050565b610a6281610a4f565b82525050565b6000602082019050610a7d6000830184610a59565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aae82610a83565b9050919050565b610abe81610aa3565b82525050565b6000602082019050610ad96000830184610ab5565b92915050565b6000819050919050565b6000610b04610aff610afa84610a83565b610adf565b610a83565b9050919050565b6000610b1682610ae9565b9050919050565b6000610b2882610b0b565b9050919050565b610b3881610b1d565b82525050565b6000602082019050610b536000830184610b2f565b92915050565b600080fd5b610b6781610a4f565b8114610b7257600080fd5b50565b600081359050610b8481610b5e565b92915050565b600060208284031215610ba057610b9f610b59565b5b6000610bae84828501610b75565b91505092915050565b610bc081610aa3565b8114610bcb57600080fd5b50565b600081359050610bdd81610bb7565b92915050565b600060208284031215610bf957610bf8610b59565b5b6000610c0784828501610bce565b91505092915050565b600082825260208201905092915050565b7f56616c7565206973206e6f7420656e6f75676821000000000000000000000000600082015250565b6000610c57601483610c10565b9150610c6282610c21565b602082019050919050565b60006020820190508181036000830152610c8681610c4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf682610a4f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2957610d28610cbc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d7e600083610d63565b9150610d8982610d6e565b600082019050919050565b6000610d9f82610d71565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ddf600b83610c10565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b6000610e2082610a4f565b9150610e2b83610a4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6457610e63610cbc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea982610a4f565b9150610eb483610a4f565b925082610ec457610ec3610e6f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eee81610ecf565b8114610ef957600080fd5b50565b600081519050610f0b81610ee5565b92915050565b6000819050919050565b610f2481610f11565b8114610f2f57600080fd5b50565b600081519050610f4181610f1b565b92915050565b600081519050610f5681610b5e565b92915050565b600080600080600060a08688031215610f7857610f77610b59565b5b6000610f8688828901610efc565b9550506020610f9788828901610f32565b9450506040610fa888828901610f47565b9350506060610fb988828901610f47565b9250506080610fca88828901610efc565b9150509295509295909350565b6000610fe282610f11565b9150610fed83610f11565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102c5761102b610cbc565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106957611068610cbc565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a6576110a5610cbc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110e3576110e2610cbc565b5b82820290509291505056fea2646970667358221220dfad0eb0d3be35b25153cff03bd81bf75f70d2d4ec6fc6fa9e4acaf23cc0ee1b64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610123578063be2693f01461012d578063d7b4750c14610137578063f97cea50146101745761008e565b80633ccfd60b146100985780636b69a592146100a2578063893d20e8146100cd5780639e87a5cd146100f85761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102d9565b005b3480156100ae57600080fd5b506100b7610519565b6040516100c49190610a68565b60405180910390f35b3480156100d957600080fd5b506100e2610526565b6040516100ef9190610ac4565b60405180910390f35b34801561010457600080fd5b5061010d61054e565b60405161011a9190610b3e565b60405180910390f35b61012b6101b1565b005b610135610578565b005b34801561014357600080fd5b5061015e60048036038101906101599190610b8a565b61083c565b60405161016b9190610ac4565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190610be3565b610884565b6040516101a89190610a68565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cc90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c6d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104095760006001828154811061038457610383610c8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610ceb565b915050610361565b50600067ffffffffffffffff81111561042557610424610d34565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b50600190805190602001906104699291906109a8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049090610d94565b60006040518083038185875af1925050503d80600081146104cd576040519150601f19603f3d011682016040523d82523d6000602084013e6104d2565b606091505b5050905080610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610df5565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561068157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610637575b5050505050905060005b815181101561070b5760008282815181106106a9576106a8610c8d565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070390610ceb565b91505061068b565b50600067ffffffffffffffff81111561072757610726610d34565b5b6040519080825280602002602001820160405280156107555781602001602082028036833780820191505090505b506001908051906020019061076b9291906109a8565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107b290610d94565b60006040518083038185875af1925050503d80600081146107ef576040519150601f19603f3d011682016040523d82523d6000602084013e6107f4565b606091505b5050905080610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90610df5565b60405180910390fd5b5050565b60006001828154811061085257610851610c8d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806108d883610908565b90506000670de0b6b3a764000085836108f19190610e15565b6108fb9190610e9e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095157600080fd5b505afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109899190610f5c565b5050509150506402540be400816109a09190610fd7565b915050919050565b828054828255906000526020600020908101928215610a21579160200282015b82811115610a205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c8565b5b509050610a2e9190610a32565b5090565b5b80821115610a4b576000816000905550600101610a33565b5090565b6000819050919050565b610a6281610a4f565b82525050565b6000602082019050610a7d6000830184610a59565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aae82610a83565b9050919050565b610abe81610aa3565b82525050565b6000602082019050610ad96000830184610ab5565b92915050565b6000819050919050565b6000610b04610aff610afa84610a83565b610adf565b610a83565b9050919050565b6000610b1682610ae9565b9050919050565b6000610b2882610b0b565b9050919050565b610b3881610b1d565b82525050565b6000602082019050610b536000830184610b2f565b92915050565b600080fd5b610b6781610a4f565b8114610b7257600080fd5b50565b600081359050610b8481610b5e565b92915050565b600060208284031215610ba057610b9f610b59565b5b6000610bae84828501610b75565b91505092915050565b610bc081610aa3565b8114610bcb57600080fd5b50565b600081359050610bdd81610bb7565b92915050565b600060208284031215610bf957610bf8610b59565b5b6000610c0784828501610bce565b91505092915050565b600082825260208201905092915050565b7f56616c7565206973206e6f7420656e6f75676821000000000000000000000000600082015250565b6000610c57601483610c10565b9150610c6282610c21565b602082019050919050565b60006020820190508181036000830152610c8681610c4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf682610a4f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2957610d28610cbc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d7e600083610d63565b9150610d8982610d6e565b600082019050919050565b6000610d9f82610d71565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ddf600b83610c10565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b6000610e2082610a4f565b9150610e2b83610a4f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6457610e63610cbc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea982610a4f565b9150610eb483610a4f565b925082610ec457610ec3610e6f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eee81610ecf565b8114610ef957600080fd5b50565b600081519050610f0b81610ee5565b92915050565b6000819050919050565b610f2481610f11565b8114610f2f57600080fd5b50565b600081519050610f4181610f1b565b92915050565b600081519050610f5681610b5e565b92915050565b600080600080600060a08688031215610f7857610f77610b59565b5b6000610f8688828901610efc565b9550506020610f9788828901610f32565b9450506040610fa888828901610f47565b9350506060610fb988828901610f47565b9250506080610fca88828901610efc565b9150509295509295909350565b6000610fe282610f11565b9150610fed83610f11565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102c5761102b610cbc565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106957611068610cbc565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a6576110a5610cbc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110e3576110e2610cbc565b5b82820290509291505056fea2646970667358221220dfad0eb0d3be35b25153cff03bd81bf75f70d2d4ec6fc6fa9e4acaf23cc0ee1b64736f6c63430008090033",
  "devdoc": {
    "author": "Rowin van Amsterdam",
    "details": "This implements price feeds as our library.",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowdfunding.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for demo purposes.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}